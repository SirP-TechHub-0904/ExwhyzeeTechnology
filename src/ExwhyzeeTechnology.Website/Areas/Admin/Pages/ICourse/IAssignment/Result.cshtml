@page
@model ExwhyzeeTechnology.Website.Areas.Admin.Pages.ICourse.IAssignment.ResultModel
@{
}


<div class="card card-default">
    <div class="card-header">
        <h3 class="card-title text-uppercase">
            ASSIGNMENT Details FOR @Model.UserAssignment.Participant.User.FullnameX (@Model.UserAssignment.Participant.IdNumber)
        </h3>
        <a asp-page="/ICourse/IActivities/ActivityDetails" asp-route-id="@Model.DialyActivity.Id" class="btn bg-gradient-warning btn-sm" style="float:right;">Bact to Activity</a>
        @if (User.IsInRole("AdminEditor") || Model.Cohort.CourseStatus != ExwhyzeeTechnology.Domain.Enum.Enum.CourseStatus.Concluded)
        {
            <a asp-page="./Create" asp-route-id="@Model.DialyActivity.Id" class="btn bg-gradient-danger btn-sm" style="float:right;">New</a>
        }
    </div>
    <!-- /.card-header -->
    <div class="card-body">
        <h3 class="text-uppercase">Cohort Information</h3>
        <h3 class="card-title">
            @Model.Cohort.Course.Name (@Model.Cohort.CohortCode) ( @Model.Cohort.StartDate.ToString("ddd dd MMM, yyyy") -
            @Model.Cohort.EndDate.ToString("ddd dd MMM, yyyy"))
        </h3>
    </div>
    <div class="card-body">
        <h5 class="text-uppercase">Dialy Activity Information</h5>
        <h5 class="">
            Date:  @Model.DialyActivity.Date.ToString("dddd dd/MM/yyyy") (@Model.DialyActivity.StartTime - @Model.DialyActivity.FinishTime))
            <br />Title: @Model.DialyActivity.Title
        </h5>
    </div>
    <!-- /.card-header -->
    <div class="card-body">
        <div class="card-body">
            <div>

                <dl class="row">
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Assignment.Title)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Assignment.Title)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Assignment.Question)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.Raw(Model.Assignment.Question)
                    </dd>
                    <dt class="col-sm-2">
                        File
                    </dt>
                    <dd class="col-sm-10">
                        <a href="@Model.Assignment.FIleUrl" class="btn btn-primary">Open</a>
                    </dd>

                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Assignment.Date)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Assignment.Date)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Assignment.LastSubmissionDate)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Assignment.LastSubmissionDate)
                    </dd>

                </dl>
            </div>
        </div>
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.UserAssignment.Answer)
                </dt>
                <dd class="col-sm-10">
                    @Html.Raw(Model.UserAssignment.Answer)
                </dd>
                @if (!String.IsNullOrEmpty(Model.UserAssignment.FileUrl))
                {
                    <dt class="col-sm-2">
                        File
                    </dt>
                    <dd class="col-sm-10">
                        <a href="@Model.UserAssignment.FileUrl">Open File</a>
                    </dd>
                }

            </dl>
        </div>
    </div>

</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
